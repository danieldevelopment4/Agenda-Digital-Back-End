#spring.datasource.url{recibe una cadena que ya se encuentra estandarizada la cual indica el tipo de base de datos, direccion IP, puerto y nombre
# de la base de datos. Todo ello mediente: 
# jdbc:<<TIPO BD>> el cual indica una coneccion a base de datos segun el tipo indicado,
# :// separador de informacion
# IP
# : separador de informacion
# PUERTO
# / separador de informacion
# NOMBRE BD
spring.datasource.url=jdbc:postgresql://ec2-3-93-206-109.compute-1.amazonaws.com:5432/dfshqrj1b9jci3
spring.datasource.username=smneidibbkuwus
spring.datasource.password=85652d59f9826ffa39861841ccabbb5b02e0b1bf5e4a2e403a8af390f9e9010a
#spring.jpa.hibernate.ddl-auto{
# none: trabaja bajo el patron data-base first, es decir que las tablas en nuestra base de datos ya se encuentran creadas y por ende no se requiere
# que el framework despliegue las mismas
#
# update: trabaja bajo el patron code first, es decir nuestra base de datos no contiene las tablas relacionados a los modelos desarrollados en el
# framework, por ende este se encargara de despligarlas
#}
spring.jpa.hibernate.ddl-auto=update


#server.port=8090
#netstat -nao|findstr 8080

spring.security.user.name="danieldevelopment4@gmail.com"
spring.security.user.password="UPTCsoftware-2019"